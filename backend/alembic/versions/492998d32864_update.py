"""update

Revision ID: 492998d32864
Revises: 2bd9fa7ff371
Create Date: 2025-08-29 02:31:55.028124

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "492998d32864"
down_revision: Union[str, Sequence[str], None] = "2bd9fa7ff371"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Clean any non-castable values first (e.g., 'None', '', 'NaN', 'NaT', or any non YYYY-MM-DD strings)
    op.execute(
        """
        UPDATE jobs
        SET date_posted = NULL
        WHERE date_posted IS NULL
           OR trim(date_posted) IN ('', 'None', 'NaN', 'NaT')
           OR date_posted !~ '^[0-9]{4}-[0-9]{2}-[0-9]{2}$';
        """
    )

    # Explicitly tell Postgres how to convert the existing text values to timestamp
    op.alter_column(
        "jobs",
        "date_posted",
        existing_type=sa.VARCHAR(),
        type_=sa.DateTime(),
        existing_nullable=True,
        postgresql_using="to_timestamp(date_posted, 'YYYY-MM-DD')",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "jobs",
        "date_posted",
        existing_type=sa.DateTime(),
        type_=sa.VARCHAR(),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
